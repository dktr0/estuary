diff --git a/src/Sound/Tidal/Params.hs b/src/Sound/Tidal/Params.hs
index ea6999e..4492c38 100644
--- a/src/Sound/Tidal/Params.hs
+++ b/src/Sound/Tidal/Params.hs
@@ -60,7 +60,7 @@ pI name = fmap (Map.singleton name . VI)
 
 pB :: String -> Pattern Bool -> ControlPattern
 pB name = fmap (Map.singleton name . VB)
- 
+
 pR :: String -> Pattern Rational -> ControlPattern
 pR name = fmap (Map.singleton name . VR)
 
@@ -74,10 +74,8 @@ pX :: String -> Pattern [Word8] -> ControlPattern
 pX name = fmap (Map.singleton name . VX)
 
 pStateF ::
-  String -> -- ^ A parameter, e.g. `note`; a
-  -- `String` recognizable by a `ValueMap`.
-  String -> -- ^ Identifies the cycling state pattern.
-  -- Can be anything the user wants.
+  String ->
+  String ->
   (Maybe Double -> Double) ->
   ControlPattern
 pStateF name sName update =
@@ -90,11 +88,9 @@ pStateF name sName update =
 -- | `pStateList` is made with cyclic lists in mind,
 -- but it can even "cycle" through infinite lists.
 pStateList ::
-  String -> -- ^ A parameter, e.g. `note`; a
-  -- `String` recognizable by a `ValueMap`.
-  String -> -- ^ Identifies the cycling state pattern.
-  -- Can be anything the user wants.
-  [Value] -> -- ^ The list to cycle through.
+  String ->
+  String ->
+  [Value] ->
   ControlPattern
 pStateList name sName xs =
   pure $ Map.singleton name $ VState statef
@@ -242,7 +238,7 @@ ampbus busid pat = (pF "amp" pat) # (pI "^amp" busid)
 amprecv :: Pattern Int -> ControlPattern
 amprecv busid = pI "^amp" busid
 
--- | 
+-- |
 array :: Pattern [Word8] -> ControlPattern
 array = pX "array"
 arrayTake :: String -> [Double] -> ControlPattern
@@ -323,7 +319,7 @@ binshiftbus busid pat = (pF "binshift" pat) # (pI "^binshift" busid)
 binshiftrecv :: Pattern Int -> ControlPattern
 binshiftrecv busid = pI "^binshift" busid
 
--- | 
+-- |
 button0 :: Pattern Double -> ControlPattern
 button0 = pF "button0"
 button0Take :: String -> [Double] -> ControlPattern
@@ -338,7 +334,7 @@ button0bus busid pat = (pF "button0" pat) # (pI "^button0" busid)
 button0recv :: Pattern Int -> ControlPattern
 button0recv busid = pI "^button0" busid
 
--- | 
+-- |
 button1 :: Pattern Double -> ControlPattern
 button1 = pF "button1"
 button1Take :: String -> [Double] -> ControlPattern
@@ -353,7 +349,7 @@ button1bus busid pat = (pF "button1" pat) # (pI "^button1" busid)
 button1recv :: Pattern Int -> ControlPattern
 button1recv busid = pI "^button1" busid
 
--- | 
+-- |
 button10 :: Pattern Double -> ControlPattern
 button10 = pF "button10"
 button10Take :: String -> [Double] -> ControlPattern
@@ -368,7 +364,7 @@ button10bus busid pat = (pF "button10" pat) # (pI "^button10" busid)
 button10recv :: Pattern Int -> ControlPattern
 button10recv busid = pI "^button10" busid
 
--- | 
+-- |
 button11 :: Pattern Double -> ControlPattern
 button11 = pF "button11"
 button11Take :: String -> [Double] -> ControlPattern
@@ -383,7 +379,7 @@ button11bus busid pat = (pF "button11" pat) # (pI "^button11" busid)
 button11recv :: Pattern Int -> ControlPattern
 button11recv busid = pI "^button11" busid
 
--- | 
+-- |
 button12 :: Pattern Double -> ControlPattern
 button12 = pF "button12"
 button12Take :: String -> [Double] -> ControlPattern
@@ -398,7 +394,7 @@ button12bus busid pat = (pF "button12" pat) # (pI "^button12" busid)
 button12recv :: Pattern Int -> ControlPattern
 button12recv busid = pI "^button12" busid
 
--- | 
+-- |
 button13 :: Pattern Double -> ControlPattern
 button13 = pF "button13"
 button13Take :: String -> [Double] -> ControlPattern
@@ -413,7 +409,7 @@ button13bus busid pat = (pF "button13" pat) # (pI "^button13" busid)
 button13recv :: Pattern Int -> ControlPattern
 button13recv busid = pI "^button13" busid
 
--- | 
+-- |
 button14 :: Pattern Double -> ControlPattern
 button14 = pF "button14"
 button14Take :: String -> [Double] -> ControlPattern
@@ -428,7 +424,7 @@ button14bus busid pat = (pF "button14" pat) # (pI "^button14" busid)
 button14recv :: Pattern Int -> ControlPattern
 button14recv busid = pI "^button14" busid
 
--- | 
+-- |
 button15 :: Pattern Double -> ControlPattern
 button15 = pF "button15"
 button15Take :: String -> [Double] -> ControlPattern
@@ -443,7 +439,7 @@ button15bus busid pat = (pF "button15" pat) # (pI "^button15" busid)
 button15recv :: Pattern Int -> ControlPattern
 button15recv busid = pI "^button15" busid
 
--- | 
+-- |
 button2 :: Pattern Double -> ControlPattern
 button2 = pF "button2"
 button2Take :: String -> [Double] -> ControlPattern
@@ -458,7 +454,7 @@ button2bus busid pat = (pF "button2" pat) # (pI "^button2" busid)
 button2recv :: Pattern Int -> ControlPattern
 button2recv busid = pI "^button2" busid
 
--- | 
+-- |
 button3 :: Pattern Double -> ControlPattern
 button3 = pF "button3"
 button3Take :: String -> [Double] -> ControlPattern
@@ -473,7 +469,7 @@ button3bus busid pat = (pF "button3" pat) # (pI "^button3" busid)
 button3recv :: Pattern Int -> ControlPattern
 button3recv busid = pI "^button3" busid
 
--- | 
+-- |
 button4 :: Pattern Double -> ControlPattern
 button4 = pF "button4"
 button4Take :: String -> [Double] -> ControlPattern
@@ -488,7 +484,7 @@ button4bus busid pat = (pF "button4" pat) # (pI "^button4" busid)
 button4recv :: Pattern Int -> ControlPattern
 button4recv busid = pI "^button4" busid
 
--- | 
+-- |
 button5 :: Pattern Double -> ControlPattern
 button5 = pF "button5"
 button5Take :: String -> [Double] -> ControlPattern
@@ -503,7 +499,7 @@ button5bus busid pat = (pF "button5" pat) # (pI "^button5" busid)
 button5recv :: Pattern Int -> ControlPattern
 button5recv busid = pI "^button5" busid
 
--- | 
+-- |
 button6 :: Pattern Double -> ControlPattern
 button6 = pF "button6"
 button6Take :: String -> [Double] -> ControlPattern
@@ -518,7 +514,7 @@ button6bus busid pat = (pF "button6" pat) # (pI "^button6" busid)
 button6recv :: Pattern Int -> ControlPattern
 button6recv busid = pI "^button6" busid
 
--- | 
+-- |
 button7 :: Pattern Double -> ControlPattern
 button7 = pF "button7"
 button7Take :: String -> [Double] -> ControlPattern
@@ -533,7 +529,7 @@ button7bus busid pat = (pF "button7" pat) # (pI "^button7" busid)
 button7recv :: Pattern Int -> ControlPattern
 button7recv busid = pI "^button7" busid
 
--- | 
+-- |
 button8 :: Pattern Double -> ControlPattern
 button8 = pF "button8"
 button8Take :: String -> [Double] -> ControlPattern
@@ -548,7 +544,7 @@ button8bus busid pat = (pF "button8" pat) # (pI "^button8" busid)
 button8recv :: Pattern Int -> ControlPattern
 button8recv busid = pI "^button8" busid
 
--- | 
+-- |
 button9 :: Pattern Double -> ControlPattern
 button9 = pF "button9"
 button9Take :: String -> [Double] -> ControlPattern
@@ -563,7 +559,7 @@ button9bus busid pat = (pF "button9" pat) # (pI "^button9" busid)
 button9recv :: Pattern Int -> ControlPattern
 button9recv busid = pI "^button9" busid
 
--- | 
+-- |
 ccn :: Pattern Double -> ControlPattern
 ccn = pF "ccn"
 ccnTake :: String -> [Double] -> ControlPattern
@@ -576,7 +572,7 @@ ccnCountTo name ipat = innerJoin $ (\i -> pStateF "ccn" name (maybe 0 ((`mod'` i
 ccnbus :: Pattern Int -> Pattern Double -> ControlPattern
 ccnbus _ _ = error $ "Control parameter 'ccn' can't be sent to a bus."
 
--- | 
+-- |
 ccv :: Pattern Double -> ControlPattern
 ccv = pF "ccv"
 ccvTake :: String -> [Double] -> ControlPattern
@@ -602,7 +598,7 @@ channelCountTo name ipat = innerJoin $ (\i -> pStateF "channel" name (maybe 0 ((
 channelbus :: Pattern Int -> Pattern Int -> ControlPattern
 channelbus _ _ = error $ "Control parameter 'channel' can't be sent to a bus."
 
--- | 
+-- |
 clhatdecay :: Pattern Double -> ControlPattern
 clhatdecay = pF "clhatdecay"
 clhatdecayTake :: String -> [Double] -> ControlPattern
@@ -647,7 +643,7 @@ combbus busid pat = (pF "comb" pat) # (pI "^comb" busid)
 combrecv :: Pattern Int -> ControlPattern
 combrecv busid = pI "^comb" busid
 
--- | 
+-- |
 control :: Pattern Double -> ControlPattern
 control = pF "control"
 controlTake :: String -> [Double] -> ControlPattern
@@ -660,7 +656,7 @@ controlCountTo name ipat = innerJoin $ (\i -> pStateF "control" name (maybe 0 ((
 controlbus :: Pattern Int -> Pattern Double -> ControlPattern
 controlbus _ _ = error $ "Control parameter 'control' can't be sent to a bus."
 
--- | 
+-- |
 cps :: Pattern Double -> ControlPattern
 cps = pF "cps"
 cpsTake :: String -> [Double] -> ControlPattern
@@ -690,7 +686,7 @@ crushbus busid pat = (pF "crush" pat) # (pI "^crush" busid)
 crushrecv :: Pattern Int -> ControlPattern
 crushrecv busid = pI "^crush" busid
 
--- | 
+-- |
 ctlNum :: Pattern Double -> ControlPattern
 ctlNum = pF "ctlNum"
 ctlNumTake :: String -> [Double] -> ControlPattern
@@ -703,7 +699,7 @@ ctlNumCountTo name ipat = innerJoin $ (\i -> pStateF "ctlNum" name (maybe 0 ((`m
 ctlNumbus :: Pattern Int -> Pattern Double -> ControlPattern
 ctlNumbus _ _ = error $ "Control parameter 'ctlNum' can't be sent to a bus."
 
--- | 
+-- |
 ctranspose :: Pattern Double -> ControlPattern
 ctranspose = pF "ctranspose"
 ctransposeTake :: String -> [Double] -> ControlPattern
@@ -748,7 +744,7 @@ cutoffbus busid pat = (pF "cutoff" pat) # (pI "^cutoff" busid)
 cutoffrecv :: Pattern Int -> ControlPattern
 cutoffrecv busid = pI "^cutoff" busid
 
--- | 
+-- |
 cutoffegint :: Pattern Double -> ControlPattern
 cutoffegint = pF "cutoffegint"
 cutoffegintTake :: String -> [Double] -> ControlPattern
@@ -763,7 +759,7 @@ cutoffegintbus busid pat = (pF "cutoffegint" pat) # (pI "^cutoffegint" busid)
 cutoffegintrecv :: Pattern Int -> ControlPattern
 cutoffegintrecv busid = pI "^cutoffegint" busid
 
--- | 
+-- |
 decay :: Pattern Double -> ControlPattern
 decay = pF "decay"
 decayTake :: String -> [Double] -> ControlPattern
@@ -778,7 +774,7 @@ decaybus busid pat = (pF "decay" pat) # (pI "^decay" busid)
 decayrecv :: Pattern Int -> ControlPattern
 decayrecv busid = pI "^decay" busid
 
--- | 
+-- |
 degree :: Pattern Double -> ControlPattern
 degree = pF "degree"
 degreeTake :: String -> [Double] -> ControlPattern
@@ -838,7 +834,7 @@ delaytimebus busid pat = (pF "delaytime" pat) # (pI "^delaytime" busid)
 delaytimerecv :: Pattern Int -> ControlPattern
 delaytimerecv busid = pI "^delaytime" busid
 
--- | 
+-- |
 detune :: Pattern Double -> ControlPattern
 detune = pF "detune"
 detuneTake :: String -> [Double] -> ControlPattern
@@ -898,7 +894,7 @@ drybus busid pat = (pF "dry" pat) # (pI "^dry" busid)
 dryrecv :: Pattern Int -> ControlPattern
 dryrecv busid = pI "^dry" busid
 
--- | 
+-- |
 dur :: Pattern Double -> ControlPattern
 dur = pF "dur"
 durTake :: String -> [Double] -> ControlPattern
@@ -941,7 +937,7 @@ enhancebus busid pat = (pF "enhance" pat) # (pI "^enhance" busid)
 enhancerecv :: Pattern Int -> ControlPattern
 enhancerecv busid = pI "^enhance" busid
 
--- | 
+-- |
 expression :: Pattern Double -> ControlPattern
 expression = pF "expression"
 expressionTake :: String -> [Double] -> ControlPattern
@@ -982,7 +978,7 @@ fadeTimeCountTo name ipat = innerJoin $ (\i -> pStateF "fadeTime" name (maybe 0
 fadeTimebus :: Pattern Int -> Pattern Double -> ControlPattern
 fadeTimebus _ _ = error $ "Control parameter 'fadeTime' can't be sent to a bus."
 
--- | 
+-- |
 frameRate :: Pattern Double -> ControlPattern
 frameRate = pF "frameRate"
 frameRateTake :: String -> [Double] -> ControlPattern
@@ -995,7 +991,7 @@ frameRateCountTo name ipat = innerJoin $ (\i -> pStateF "frameRate" name (maybe
 frameRatebus :: Pattern Int -> Pattern Double -> ControlPattern
 frameRatebus _ _ = error $ "Control parameter 'frameRate' can't be sent to a bus."
 
--- | 
+-- |
 frames :: Pattern Double -> ControlPattern
 frames = pF "frames"
 framesTake :: String -> [Double] -> ControlPattern
@@ -1023,7 +1019,7 @@ freezebus busid pat = (pF "freeze" pat) # (pI "^freeze" busid)
 freezerecv :: Pattern Int -> ControlPattern
 freezerecv busid = pI "^freeze" busid
 
--- | 
+-- |
 freq :: Pattern Double -> ControlPattern
 freq = pF "freq"
 freqTake :: String -> [Double] -> ControlPattern
@@ -1111,7 +1107,7 @@ gainCountTo name ipat = innerJoin $ (\i -> pStateF "gain" name (maybe 0 ((`mod'`
 gainbus :: Pattern Int -> Pattern Double -> ControlPattern
 gainbus _ _ = error $ "Control parameter 'gain' can't be sent to a bus."
 
--- | 
+-- |
 gate :: Pattern Double -> ControlPattern
 gate = pF "gate"
 gateTake :: String -> [Double] -> ControlPattern
@@ -1126,7 +1122,7 @@ gatebus busid pat = (pF "gate" pat) # (pI "^gate" busid)
 gaterecv :: Pattern Int -> ControlPattern
 gaterecv busid = pI "^gate" busid
 
--- | 
+-- |
 harmonic :: Pattern Double -> ControlPattern
 harmonic = pF "harmonic"
 harmonicTake :: String -> [Double] -> ControlPattern
@@ -1141,7 +1137,7 @@ harmonicbus busid pat = (pF "harmonic" pat) # (pI "^harmonic" busid)
 harmonicrecv :: Pattern Int -> ControlPattern
 harmonicrecv busid = pI "^harmonic" busid
 
--- | 
+-- |
 hatgrain :: Pattern Double -> ControlPattern
 hatgrain = pF "hatgrain"
 hatgrainTake :: String -> [Double] -> ControlPattern
@@ -1201,7 +1197,7 @@ holdbus busid pat = (pF "hold" pat) # (pI "^hold" busid)
 holdrecv :: Pattern Int -> ControlPattern
 holdrecv busid = pI "^hold" busid
 
--- | 
+-- |
 hours :: Pattern Double -> ControlPattern
 hours = pF "hours"
 hoursTake :: String -> [Double] -> ControlPattern
@@ -1229,7 +1225,7 @@ hresonancebus busid pat = (pF "hresonance" pat) # (pI "^hresonance" busid)
 hresonancerecv :: Pattern Int -> ControlPattern
 hresonancerecv busid = pI "^hresonance" busid
 
--- | 
+-- |
 imag :: Pattern Double -> ControlPattern
 imag = pF "imag"
 imagTake :: String -> [Double] -> ControlPattern
@@ -1244,7 +1240,7 @@ imagbus busid pat = (pF "imag" pat) # (pI "^imag" busid)
 imagrecv :: Pattern Int -> ControlPattern
 imagrecv busid = pI "^imag" busid
 
--- | 
+-- |
 kcutoff :: Pattern Double -> ControlPattern
 kcutoff = pF "kcutoff"
 kcutoffTake :: String -> [Double] -> ControlPattern
@@ -1274,7 +1270,7 @@ krushbus busid pat = (pF "krush" pat) # (pI "^krush" busid)
 krushrecv :: Pattern Int -> ControlPattern
 krushrecv busid = pI "^krush" busid
 
--- | 
+-- |
 lagogo :: Pattern Double -> ControlPattern
 lagogo = pF "lagogo"
 lagogoTake :: String -> [Double] -> ControlPattern
@@ -1304,7 +1300,7 @@ lbrickbus busid pat = (pF "lbrick" pat) # (pI "^lbrick" busid)
 lbrickrecv :: Pattern Int -> ControlPattern
 lbrickrecv busid = pI "^lbrick" busid
 
--- | 
+-- |
 lclap :: Pattern Double -> ControlPattern
 lclap = pF "lclap"
 lclapTake :: String -> [Double] -> ControlPattern
@@ -1319,7 +1315,7 @@ lclapbus busid pat = (pF "lclap" pat) # (pI "^lclap" busid)
 lclaprecv :: Pattern Int -> ControlPattern
 lclaprecv busid = pI "^lclap" busid
 
--- | 
+-- |
 lclaves :: Pattern Double -> ControlPattern
 lclaves = pF "lclaves"
 lclavesTake :: String -> [Double] -> ControlPattern
@@ -1334,7 +1330,7 @@ lclavesbus busid pat = (pF "lclaves" pat) # (pI "^lclaves" busid)
 lclavesrecv :: Pattern Int -> ControlPattern
 lclavesrecv busid = pI "^lclaves" busid
 
--- | 
+-- |
 lclhat :: Pattern Double -> ControlPattern
 lclhat = pF "lclhat"
 lclhatTake :: String -> [Double] -> ControlPattern
@@ -1349,7 +1345,7 @@ lclhatbus busid pat = (pF "lclhat" pat) # (pI "^lclhat" busid)
 lclhatrecv :: Pattern Int -> ControlPattern
 lclhatrecv busid = pI "^lclhat" busid
 
--- | 
+-- |
 lcrash :: Pattern Double -> ControlPattern
 lcrash = pF "lcrash"
 lcrashTake :: String -> [Double] -> ControlPattern
@@ -1377,7 +1373,7 @@ legatoCountTo name ipat = innerJoin $ (\i -> pStateF "legato" name (maybe 0 ((`m
 legatobus :: Pattern Int -> Pattern Double -> ControlPattern
 legatobus _ _ = error $ "Control parameter 'legato' can't be sent to a bus."
 
--- | 
+-- |
 leslie :: Pattern Double -> ControlPattern
 leslie = pF "leslie"
 leslieTake :: String -> [Double] -> ControlPattern
@@ -1392,7 +1388,7 @@ lesliebus busid pat = (pF "leslie" pat) # (pI "^leslie" busid)
 leslierecv :: Pattern Int -> ControlPattern
 leslierecv busid = pI "^leslie" busid
 
--- | 
+-- |
 lfo :: Pattern Double -> ControlPattern
 lfo = pF "lfo"
 lfoTake :: String -> [Double] -> ControlPattern
@@ -1407,7 +1403,7 @@ lfobus busid pat = (pF "lfo" pat) # (pI "^lfo" busid)
 lforecv :: Pattern Int -> ControlPattern
 lforecv busid = pI "^lfo" busid
 
--- | 
+-- |
 lfocutoffint :: Pattern Double -> ControlPattern
 lfocutoffint = pF "lfocutoffint"
 lfocutoffintTake :: String -> [Double] -> ControlPattern
@@ -1422,7 +1418,7 @@ lfocutoffintbus busid pat = (pF "lfocutoffint" pat) # (pI "^lfocutoffint" busid)
 lfocutoffintrecv :: Pattern Int -> ControlPattern
 lfocutoffintrecv busid = pI "^lfocutoffint" busid
 
--- | 
+-- |
 lfodelay :: Pattern Double -> ControlPattern
 lfodelay = pF "lfodelay"
 lfodelayTake :: String -> [Double] -> ControlPattern
@@ -1437,7 +1433,7 @@ lfodelaybus busid pat = (pF "lfodelay" pat) # (pI "^lfodelay" busid)
 lfodelayrecv :: Pattern Int -> ControlPattern
 lfodelayrecv busid = pI "^lfodelay" busid
 
--- | 
+-- |
 lfoint :: Pattern Double -> ControlPattern
 lfoint = pF "lfoint"
 lfointTake :: String -> [Double] -> ControlPattern
@@ -1452,7 +1448,7 @@ lfointbus busid pat = (pF "lfoint" pat) # (pI "^lfoint" busid)
 lfointrecv :: Pattern Int -> ControlPattern
 lfointrecv busid = pI "^lfoint" busid
 
--- | 
+-- |
 lfopitchint :: Pattern Double -> ControlPattern
 lfopitchint = pF "lfopitchint"
 lfopitchintTake :: String -> [Double] -> ControlPattern
@@ -1467,7 +1463,7 @@ lfopitchintbus busid pat = (pF "lfopitchint" pat) # (pI "^lfopitchint" busid)
 lfopitchintrecv :: Pattern Int -> ControlPattern
 lfopitchintrecv busid = pI "^lfopitchint" busid
 
--- | 
+-- |
 lfoshape :: Pattern Double -> ControlPattern
 lfoshape = pF "lfoshape"
 lfoshapeTake :: String -> [Double] -> ControlPattern
@@ -1482,7 +1478,7 @@ lfoshapebus busid pat = (pF "lfoshape" pat) # (pI "^lfoshape" busid)
 lfoshaperecv :: Pattern Int -> ControlPattern
 lfoshaperecv busid = pI "^lfoshape" busid
 
--- | 
+-- |
 lfosync :: Pattern Double -> ControlPattern
 lfosync = pF "lfosync"
 lfosyncTake :: String -> [Double] -> ControlPattern
@@ -1497,7 +1493,7 @@ lfosyncbus busid pat = (pF "lfosync" pat) # (pI "^lfosync" busid)
 lfosyncrecv :: Pattern Int -> ControlPattern
 lfosyncrecv busid = pI "^lfosync" busid
 
--- | 
+-- |
 lhitom :: Pattern Double -> ControlPattern
 lhitom = pF "lhitom"
 lhitomTake :: String -> [Double] -> ControlPattern
@@ -1512,7 +1508,7 @@ lhitombus busid pat = (pF "lhitom" pat) # (pI "^lhitom" busid)
 lhitomrecv :: Pattern Int -> ControlPattern
 lhitomrecv busid = pI "^lhitom" busid
 
--- | 
+-- |
 lkick :: Pattern Double -> ControlPattern
 lkick = pF "lkick"
 lkickTake :: String -> [Double] -> ControlPattern
@@ -1527,7 +1523,7 @@ lkickbus busid pat = (pF "lkick" pat) # (pI "^lkick" busid)
 lkickrecv :: Pattern Int -> ControlPattern
 lkickrecv busid = pI "^lkick" busid
 
--- | 
+-- |
 llotom :: Pattern Double -> ControlPattern
 llotom = pF "llotom"
 llotomTake :: String -> [Double] -> ControlPattern
@@ -1570,7 +1566,7 @@ loopCountTo name ipat = innerJoin $ (\i -> pStateF "loop" name (maybe 0 ((`mod'`
 loopbus :: Pattern Int -> Pattern Double -> ControlPattern
 loopbus _ _ = error $ "Control parameter 'loop' can't be sent to a bus."
 
--- | 
+-- |
 lophat :: Pattern Double -> ControlPattern
 lophat = pF "lophat"
 lophatTake :: String -> [Double] -> ControlPattern
@@ -1585,7 +1581,7 @@ lophatbus busid pat = (pF "lophat" pat) # (pI "^lophat" busid)
 lophatrecv :: Pattern Int -> ControlPattern
 lophatrecv busid = pI "^lophat" busid
 
--- | 
+-- |
 lrate :: Pattern Double -> ControlPattern
 lrate = pF "lrate"
 lrateTake :: String -> [Double] -> ControlPattern
@@ -1600,7 +1596,7 @@ lratebus busid pat = (pF "lrate" pat) # (pI "^lrate" busid)
 lraterecv :: Pattern Int -> ControlPattern
 lraterecv busid = pI "^lrate" busid
 
--- | 
+-- |
 lsize :: Pattern Double -> ControlPattern
 lsize = pF "lsize"
 lsizeTake :: String -> [Double] -> ControlPattern
@@ -1615,7 +1611,7 @@ lsizebus busid pat = (pF "lsize" pat) # (pI "^lsize" busid)
 lsizerecv :: Pattern Int -> ControlPattern
 lsizerecv busid = pI "^lsize" busid
 
--- | 
+-- |
 lsnare :: Pattern Double -> ControlPattern
 lsnare = pF "lsnare"
 lsnareTake :: String -> [Double] -> ControlPattern
@@ -1630,7 +1626,7 @@ lsnarebus busid pat = (pF "lsnare" pat) # (pI "^lsnare" busid)
 lsnarerecv :: Pattern Int -> ControlPattern
 lsnarerecv busid = pI "^lsnare" busid
 
--- | 
+-- |
 midibend :: Pattern Double -> ControlPattern
 midibend = pF "midibend"
 midibendTake :: String -> [Double] -> ControlPattern
@@ -1643,7 +1639,7 @@ midibendCountTo name ipat = innerJoin $ (\i -> pStateF "midibend" name (maybe 0
 midibendbus :: Pattern Int -> Pattern Double -> ControlPattern
 midibendbus _ _ = error $ "Control parameter 'midibend' can't be sent to a bus."
 
--- | 
+-- |
 midichan :: Pattern Double -> ControlPattern
 midichan = pF "midichan"
 midichanTake :: String -> [Double] -> ControlPattern
@@ -1656,7 +1652,7 @@ midichanCountTo name ipat = innerJoin $ (\i -> pStateF "midichan" name (maybe 0
 midichanbus :: Pattern Int -> Pattern Double -> ControlPattern
 midichanbus _ _ = error $ "Control parameter 'midichan' can't be sent to a bus."
 
--- | 
+-- |
 midicmd :: Pattern String -> ControlPattern
 midicmd = pS "midicmd"
 midicmdTake :: String -> [Double] -> ControlPattern
@@ -1664,7 +1660,7 @@ midicmdTake name xs = pStateListF "midicmd" name xs
 midicmdbus :: Pattern Int -> Pattern String -> ControlPattern
 midicmdbus _ _ = error $ "Control parameter 'midicmd' can't be sent to a bus."
 
--- | 
+-- |
 miditouch :: Pattern Double -> ControlPattern
 miditouch = pF "miditouch"
 miditouchTake :: String -> [Double] -> ControlPattern
@@ -1677,7 +1673,7 @@ miditouchCountTo name ipat = innerJoin $ (\i -> pStateF "miditouch" name (maybe
 miditouchbus :: Pattern Int -> Pattern Double -> ControlPattern
 miditouchbus _ _ = error $ "Control parameter 'miditouch' can't be sent to a bus."
 
--- | 
+-- |
 minutes :: Pattern Double -> ControlPattern
 minutes = pF "minutes"
 minutesTake :: String -> [Double] -> ControlPattern
@@ -1690,7 +1686,7 @@ minutesCountTo name ipat = innerJoin $ (\i -> pStateF "minutes" name (maybe 0 ((
 minutesbus :: Pattern Int -> Pattern Double -> ControlPattern
 minutesbus _ _ = error $ "Control parameter 'minutes' can't be sent to a bus."
 
--- | 
+-- |
 modwheel :: Pattern Double -> ControlPattern
 modwheel = pF "modwheel"
 modwheelTake :: String -> [Double] -> ControlPattern
@@ -1705,7 +1701,7 @@ modwheelbus busid pat = (pF "modwheel" pat) # (pI "^modwheel" busid)
 modwheelrecv :: Pattern Int -> ControlPattern
 modwheelrecv busid = pI "^modwheel" busid
 
--- | 
+-- |
 mtranspose :: Pattern Double -> ControlPattern
 mtranspose = pF "mtranspose"
 mtransposeTake :: String -> [Double] -> ControlPattern
@@ -1761,7 +1757,7 @@ nudgebus busid pat = (pF "nudge" pat) # (pI "^nudge" busid)
 nudgerecv :: Pattern Int -> ControlPattern
 nudgerecv busid = pI "^nudge" busid
 
--- | 
+-- |
 octave :: Pattern Int -> ControlPattern
 octave = pI "octave"
 octaveTake :: String -> [Double] -> ControlPattern
@@ -1774,7 +1770,7 @@ octaveCountTo name ipat = innerJoin $ (\i -> pStateF "octave" name (maybe 0 ((`m
 octavebus :: Pattern Int -> Pattern Int -> ControlPattern
 octavebus _ _ = error $ "Control parameter 'octave' can't be sent to a bus."
 
--- | 
+-- |
 octaveR :: Pattern Double -> ControlPattern
 octaveR = pF "octaveR"
 octaveRTake :: String -> [Double] -> ControlPattern
@@ -1834,7 +1830,7 @@ octersubsubbus busid pat = (pF "octersubsub" pat) # (pI "^octersubsub" busid)
 octersubsubrecv :: Pattern Int -> ControlPattern
 octersubsubrecv busid = pI "^octersubsub" busid
 
--- | 
+-- |
 offset :: Pattern Double -> ControlPattern
 offset = pF "offset"
 offsetTake :: String -> [Double] -> ControlPattern
@@ -1847,7 +1843,7 @@ offsetCountTo name ipat = innerJoin $ (\i -> pStateF "offset" name (maybe 0 ((`m
 offsetbus :: Pattern Int -> Pattern Double -> ControlPattern
 offsetbus _ _ = error $ "Control parameter 'offset' can't be sent to a bus."
 
--- | 
+-- |
 ophatdecay :: Pattern Double -> ControlPattern
 ophatdecay = pF "ophatdecay"
 ophatdecayTake :: String -> [Double] -> ControlPattern
@@ -1877,7 +1873,7 @@ orbitbus busid pat = (pI "orbit" pat) # (pI "^orbit" busid)
 orbitrecv :: Pattern Int -> ControlPattern
 orbitrecv busid = pI "^orbit" busid
 
--- | 
+-- |
 overgain :: Pattern Double -> ControlPattern
 overgain = pF "overgain"
 overgainTake :: String -> [Double] -> ControlPattern
@@ -1890,7 +1886,7 @@ overgainCountTo name ipat = innerJoin $ (\i -> pStateF "overgain" name (maybe 0
 overgainbus :: Pattern Int -> Pattern Double -> ControlPattern
 overgainbus _ _ = error $ "Control parameter 'overgain' can't be sent to a bus."
 
--- | 
+-- |
 overshape :: Pattern Double -> ControlPattern
 overshape = pF "overshape"
 overshapeTake :: String -> [Double] -> ControlPattern
@@ -1980,7 +1976,7 @@ panwidthbus busid pat = (pF "panwidth" pat) # (pI "^panwidth" busid)
 panwidthrecv :: Pattern Int -> ControlPattern
 panwidthrecv busid = pI "^panwidth" busid
 
--- | 
+-- |
 partials :: Pattern Double -> ControlPattern
 partials = pF "partials"
 partialsTake :: String -> [Double] -> ControlPattern
@@ -2025,7 +2021,7 @@ phaserratebus busid pat = (pF "phaserrate" pat) # (pI "^phaserrate" busid)
 phaserraterecv :: Pattern Int -> ControlPattern
 phaserraterecv busid = pI "^phaserrate" busid
 
--- | 
+-- |
 pitch1 :: Pattern Double -> ControlPattern
 pitch1 = pF "pitch1"
 pitch1Take :: String -> [Double] -> ControlPattern
@@ -2040,7 +2036,7 @@ pitch1bus busid pat = (pF "pitch1" pat) # (pI "^pitch1" busid)
 pitch1recv :: Pattern Int -> ControlPattern
 pitch1recv busid = pI "^pitch1" busid
 
--- | 
+-- |
 pitch2 :: Pattern Double -> ControlPattern
 pitch2 = pF "pitch2"
 pitch2Take :: String -> [Double] -> ControlPattern
@@ -2055,7 +2051,7 @@ pitch2bus busid pat = (pF "pitch2" pat) # (pI "^pitch2" busid)
 pitch2recv :: Pattern Int -> ControlPattern
 pitch2recv busid = pI "^pitch2" busid
 
--- | 
+-- |
 pitch3 :: Pattern Double -> ControlPattern
 pitch3 = pF "pitch3"
 pitch3Take :: String -> [Double] -> ControlPattern
@@ -2070,7 +2066,7 @@ pitch3bus busid pat = (pF "pitch3" pat) # (pI "^pitch3" busid)
 pitch3recv :: Pattern Int -> ControlPattern
 pitch3recv busid = pI "^pitch3" busid
 
--- | 
+-- |
 polyTouch :: Pattern Double -> ControlPattern
 polyTouch = pF "polyTouch"
 polyTouchTake :: String -> [Double] -> ControlPattern
@@ -2083,7 +2079,7 @@ polyTouchCountTo name ipat = innerJoin $ (\i -> pStateF "polyTouch" name (maybe
 polyTouchbus :: Pattern Int -> Pattern Double -> ControlPattern
 polyTouchbus _ _ = error $ "Control parameter 'polyTouch' can't be sent to a bus."
 
--- | 
+-- |
 portamento :: Pattern Double -> ControlPattern
 portamento = pF "portamento"
 portamentoTake :: String -> [Double] -> ControlPattern
@@ -2098,7 +2094,7 @@ portamentobus busid pat = (pF "portamento" pat) # (pI "^portamento" busid)
 portamentorecv :: Pattern Int -> ControlPattern
 portamentorecv busid = pI "^portamento" busid
 
--- | 
+-- |
 progNum :: Pattern Double -> ControlPattern
 progNum = pF "progNum"
 progNumTake :: String -> [Double] -> ControlPattern
@@ -2231,7 +2227,7 @@ roombus busid pat = (pF "room" pat) # (pI "^room" busid)
 roomrecv :: Pattern Int -> ControlPattern
 roomrecv busid = pI "^room" busid
 
--- | 
+-- |
 sagogo :: Pattern Double -> ControlPattern
 sagogo = pF "sagogo"
 sagogoTake :: String -> [Double] -> ControlPattern
@@ -2246,7 +2242,7 @@ sagogobus busid pat = (pF "sagogo" pat) # (pI "^sagogo" busid)
 sagogorecv :: Pattern Int -> ControlPattern
 sagogorecv busid = pI "^sagogo" busid
 
--- | 
+-- |
 sclap :: Pattern Double -> ControlPattern
 sclap = pF "sclap"
 sclapTake :: String -> [Double] -> ControlPattern
@@ -2261,7 +2257,7 @@ sclapbus busid pat = (pF "sclap" pat) # (pI "^sclap" busid)
 sclaprecv :: Pattern Int -> ControlPattern
 sclaprecv busid = pI "^sclap" busid
 
--- | 
+-- |
 sclaves :: Pattern Double -> ControlPattern
 sclaves = pF "sclaves"
 sclavesTake :: String -> [Double] -> ControlPattern
@@ -2291,7 +2287,7 @@ scrambus busid pat = (pF "scram" pat) # (pI "^scram" busid)
 scramrecv :: Pattern Int -> ControlPattern
 scramrecv busid = pI "^scram" busid
 
--- | 
+-- |
 scrash :: Pattern Double -> ControlPattern
 scrash = pF "scrash"
 scrashTake :: String -> [Double] -> ControlPattern
@@ -2306,7 +2302,7 @@ scrashbus busid pat = (pF "scrash" pat) # (pI "^scrash" busid)
 scrashrecv :: Pattern Int -> ControlPattern
 scrashrecv busid = pI "^scrash" busid
 
--- | 
+-- |
 seconds :: Pattern Double -> ControlPattern
 seconds = pF "seconds"
 secondsTake :: String -> [Double] -> ControlPattern
@@ -2319,7 +2315,7 @@ secondsCountTo name ipat = innerJoin $ (\i -> pStateF "seconds" name (maybe 0 ((
 secondsbus :: Pattern Int -> Pattern Double -> ControlPattern
 secondsbus _ _ = error $ "Control parameter 'seconds' can't be sent to a bus."
 
--- | 
+-- |
 semitone :: Pattern Double -> ControlPattern
 semitone = pF "semitone"
 semitoneTake :: String -> [Double] -> ControlPattern
@@ -2364,7 +2360,7 @@ sizebus busid pat = (pF "size" pat) # (pI "^size" busid)
 sizerecv :: Pattern Int -> ControlPattern
 sizerecv busid = pI "^size" busid
 
--- | 
+-- |
 slide :: Pattern Double -> ControlPattern
 slide = pF "slide"
 slideTake :: String -> [Double] -> ControlPattern
@@ -2379,7 +2375,7 @@ slidebus busid pat = (pF "slide" pat) # (pI "^slide" busid)
 sliderecv :: Pattern Int -> ControlPattern
 sliderecv busid = pI "^slide" busid
 
--- | 
+-- |
 slider0 :: Pattern Double -> ControlPattern
 slider0 = pF "slider0"
 slider0Take :: String -> [Double] -> ControlPattern
@@ -2394,7 +2390,7 @@ slider0bus busid pat = (pF "slider0" pat) # (pI "^slider0" busid)
 slider0recv :: Pattern Int -> ControlPattern
 slider0recv busid = pI "^slider0" busid
 
--- | 
+-- |
 slider1 :: Pattern Double -> ControlPattern
 slider1 = pF "slider1"
 slider1Take :: String -> [Double] -> ControlPattern
@@ -2409,7 +2405,7 @@ slider1bus busid pat = (pF "slider1" pat) # (pI "^slider1" busid)
 slider1recv :: Pattern Int -> ControlPattern
 slider1recv busid = pI "^slider1" busid
 
--- | 
+-- |
 slider10 :: Pattern Double -> ControlPattern
 slider10 = pF "slider10"
 slider10Take :: String -> [Double] -> ControlPattern
@@ -2424,7 +2420,7 @@ slider10bus busid pat = (pF "slider10" pat) # (pI "^slider10" busid)
 slider10recv :: Pattern Int -> ControlPattern
 slider10recv busid = pI "^slider10" busid
 
--- | 
+-- |
 slider11 :: Pattern Double -> ControlPattern
 slider11 = pF "slider11"
 slider11Take :: String -> [Double] -> ControlPattern
@@ -2439,7 +2435,7 @@ slider11bus busid pat = (pF "slider11" pat) # (pI "^slider11" busid)
 slider11recv :: Pattern Int -> ControlPattern
 slider11recv busid = pI "^slider11" busid
 
--- | 
+-- |
 slider12 :: Pattern Double -> ControlPattern
 slider12 = pF "slider12"
 slider12Take :: String -> [Double] -> ControlPattern
@@ -2454,7 +2450,7 @@ slider12bus busid pat = (pF "slider12" pat) # (pI "^slider12" busid)
 slider12recv :: Pattern Int -> ControlPattern
 slider12recv busid = pI "^slider12" busid
 
--- | 
+-- |
 slider13 :: Pattern Double -> ControlPattern
 slider13 = pF "slider13"
 slider13Take :: String -> [Double] -> ControlPattern
@@ -2469,7 +2465,7 @@ slider13bus busid pat = (pF "slider13" pat) # (pI "^slider13" busid)
 slider13recv :: Pattern Int -> ControlPattern
 slider13recv busid = pI "^slider13" busid
 
--- | 
+-- |
 slider14 :: Pattern Double -> ControlPattern
 slider14 = pF "slider14"
 slider14Take :: String -> [Double] -> ControlPattern
@@ -2484,7 +2480,7 @@ slider14bus busid pat = (pF "slider14" pat) # (pI "^slider14" busid)
 slider14recv :: Pattern Int -> ControlPattern
 slider14recv busid = pI "^slider14" busid
 
--- | 
+-- |
 slider15 :: Pattern Double -> ControlPattern
 slider15 = pF "slider15"
 slider15Take :: String -> [Double] -> ControlPattern
@@ -2499,7 +2495,7 @@ slider15bus busid pat = (pF "slider15" pat) # (pI "^slider15" busid)
 slider15recv :: Pattern Int -> ControlPattern
 slider15recv busid = pI "^slider15" busid
 
--- | 
+-- |
 slider2 :: Pattern Double -> ControlPattern
 slider2 = pF "slider2"
 slider2Take :: String -> [Double] -> ControlPattern
@@ -2514,7 +2510,7 @@ slider2bus busid pat = (pF "slider2" pat) # (pI "^slider2" busid)
 slider2recv :: Pattern Int -> ControlPattern
 slider2recv busid = pI "^slider2" busid
 
--- | 
+-- |
 slider3 :: Pattern Double -> ControlPattern
 slider3 = pF "slider3"
 slider3Take :: String -> [Double] -> ControlPattern
@@ -2529,7 +2525,7 @@ slider3bus busid pat = (pF "slider3" pat) # (pI "^slider3" busid)
 slider3recv :: Pattern Int -> ControlPattern
 slider3recv busid = pI "^slider3" busid
 
--- | 
+-- |
 slider4 :: Pattern Double -> ControlPattern
 slider4 = pF "slider4"
 slider4Take :: String -> [Double] -> ControlPattern
@@ -2544,7 +2540,7 @@ slider4bus busid pat = (pF "slider4" pat) # (pI "^slider4" busid)
 slider4recv :: Pattern Int -> ControlPattern
 slider4recv busid = pI "^slider4" busid
 
--- | 
+-- |
 slider5 :: Pattern Double -> ControlPattern
 slider5 = pF "slider5"
 slider5Take :: String -> [Double] -> ControlPattern
@@ -2559,7 +2555,7 @@ slider5bus busid pat = (pF "slider5" pat) # (pI "^slider5" busid)
 slider5recv :: Pattern Int -> ControlPattern
 slider5recv busid = pI "^slider5" busid
 
--- | 
+-- |
 slider6 :: Pattern Double -> ControlPattern
 slider6 = pF "slider6"
 slider6Take :: String -> [Double] -> ControlPattern
@@ -2574,7 +2570,7 @@ slider6bus busid pat = (pF "slider6" pat) # (pI "^slider6" busid)
 slider6recv :: Pattern Int -> ControlPattern
 slider6recv busid = pI "^slider6" busid
 
--- | 
+-- |
 slider7 :: Pattern Double -> ControlPattern
 slider7 = pF "slider7"
 slider7Take :: String -> [Double] -> ControlPattern
@@ -2589,7 +2585,7 @@ slider7bus busid pat = (pF "slider7" pat) # (pI "^slider7" busid)
 slider7recv :: Pattern Int -> ControlPattern
 slider7recv busid = pI "^slider7" busid
 
--- | 
+-- |
 slider8 :: Pattern Double -> ControlPattern
 slider8 = pF "slider8"
 slider8Take :: String -> [Double] -> ControlPattern
@@ -2604,7 +2600,7 @@ slider8bus busid pat = (pF "slider8" pat) # (pI "^slider8" busid)
 slider8recv :: Pattern Int -> ControlPattern
 slider8recv busid = pI "^slider8" busid
 
--- | 
+-- |
 slider9 :: Pattern Double -> ControlPattern
 slider9 = pF "slider9"
 slider9Take :: String -> [Double] -> ControlPattern
@@ -2634,7 +2630,7 @@ smearbus busid pat = (pF "smear" pat) # (pI "^smear" busid)
 smearrecv :: Pattern Int -> ControlPattern
 smearrecv busid = pI "^smear" busid
 
--- | 
+-- |
 songPtr :: Pattern Double -> ControlPattern
 songPtr = pF "songPtr"
 songPtrTake :: String -> [Double] -> ControlPattern
@@ -2660,7 +2656,7 @@ speedCountTo name ipat = innerJoin $ (\i -> pStateF "speed" name (maybe 0 ((`mod
 speedbus :: Pattern Int -> Pattern Double -> ControlPattern
 speedbus _ _ = error $ "Control parameter 'speed' can't be sent to a bus."
 
--- | 
+-- |
 squiz :: Pattern Double -> ControlPattern
 squiz = pF "squiz"
 squizTake :: String -> [Double] -> ControlPattern
@@ -2675,7 +2671,7 @@ squizbus busid pat = (pF "squiz" pat) # (pI "^squiz" busid)
 squizrecv :: Pattern Int -> ControlPattern
 squizrecv busid = pI "^squiz" busid
 
--- | 
+-- |
 stepsPerOctave :: Pattern Double -> ControlPattern
 stepsPerOctave = pF "stepsPerOctave"
 stepsPerOctaveTake :: String -> [Double] -> ControlPattern
@@ -2690,7 +2686,7 @@ stepsPerOctavebus busid pat = (pF "stepsPerOctave" pat) # (pI "^stepsPerOctave"
 stepsPerOctaverecv :: Pattern Int -> ControlPattern
 stepsPerOctaverecv busid = pI "^stepsPerOctave" busid
 
--- | 
+-- |
 stutterdepth :: Pattern Double -> ControlPattern
 stutterdepth = pF "stutterdepth"
 stutterdepthTake :: String -> [Double] -> ControlPattern
@@ -2705,7 +2701,7 @@ stutterdepthbus busid pat = (pF "stutterdepth" pat) # (pI "^stutterdepth" busid)
 stutterdepthrecv :: Pattern Int -> ControlPattern
 stutterdepthrecv busid = pI "^stutterdepth" busid
 
--- | 
+-- |
 stuttertime :: Pattern Double -> ControlPattern
 stuttertime = pF "stuttertime"
 stuttertimeTake :: String -> [Double] -> ControlPattern
@@ -2720,7 +2716,7 @@ stuttertimebus busid pat = (pF "stuttertime" pat) # (pI "^stuttertime" busid)
 stuttertimerecv :: Pattern Int -> ControlPattern
 stuttertimerecv busid = pI "^stuttertime" busid
 
--- | 
+-- |
 sustain :: Pattern Double -> ControlPattern
 sustain = pF "sustain"
 sustainTake :: String -> [Double] -> ControlPattern
@@ -2733,7 +2729,7 @@ sustainCountTo name ipat = innerJoin $ (\i -> pStateF "sustain" name (maybe 0 ((
 sustainbus :: Pattern Int -> Pattern Double -> ControlPattern
 sustainbus _ _ = error $ "Control parameter 'sustain' can't be sent to a bus."
 
--- | 
+-- |
 sustainpedal :: Pattern Double -> ControlPattern
 sustainpedal = pF "sustainpedal"
 sustainpedalTake :: String -> [Double] -> ControlPattern
@@ -2799,7 +2795,7 @@ toArgbus busid pat = (pS "toArg" pat) # (pI "^toArg" busid)
 toArgrecv :: Pattern Int -> ControlPattern
 toArgrecv busid = pI "^toArg" busid
 
--- | 
+-- |
 tomdecay :: Pattern Double -> ControlPattern
 tomdecay = pF "tomdecay"
 tomdecayTake :: String -> [Double] -> ControlPattern
@@ -2859,7 +2855,7 @@ triodebus busid pat = (pF "triode" pat) # (pI "^triode" busid)
 trioderecv :: Pattern Int -> ControlPattern
 trioderecv busid = pI "^triode" busid
 
--- | 
+-- |
 tsdelay :: Pattern Double -> ControlPattern
 tsdelay = pF "tsdelay"
 tsdelayTake :: String -> [Double] -> ControlPattern
@@ -2874,7 +2870,7 @@ tsdelaybus busid pat = (pF "tsdelay" pat) # (pI "^tsdelay" busid)
 tsdelayrecv :: Pattern Int -> ControlPattern
 tsdelayrecv busid = pI "^tsdelay" busid
 
--- | 
+-- |
 uid :: Pattern Double -> ControlPattern
 uid = pF "uid"
 uidTake :: String -> [Double] -> ControlPattern
@@ -2895,7 +2891,7 @@ unitTake name xs = pStateListF "unit" name xs
 unitbus :: Pattern Int -> Pattern String -> ControlPattern
 unitbus _ _ = error $ "Control parameter 'unit' can't be sent to a bus."
 
--- | 
+-- |
 val :: Pattern Double -> ControlPattern
 val = pF "val"
 valTake :: String -> [Double] -> ControlPattern
@@ -2908,7 +2904,7 @@ valCountTo name ipat = innerJoin $ (\i -> pStateF "val" name (maybe 0 ((`mod'` i
 valbus :: Pattern Int -> Pattern Double -> ControlPattern
 valbus _ _ = error $ "Control parameter 'val' can't be sent to a bus."
 
--- | 
+-- |
 vcfegint :: Pattern Double -> ControlPattern
 vcfegint = pF "vcfegint"
 vcfegintTake :: String -> [Double] -> ControlPattern
@@ -2923,7 +2919,7 @@ vcfegintbus busid pat = (pF "vcfegint" pat) # (pI "^vcfegint" busid)
 vcfegintrecv :: Pattern Int -> ControlPattern
 vcfegintrecv busid = pI "^vcfegint" busid
 
--- | 
+-- |
 vcoegint :: Pattern Double -> ControlPattern
 vcoegint = pF "vcoegint"
 vcoegintTake :: String -> [Double] -> ControlPattern
@@ -2938,7 +2934,7 @@ vcoegintbus busid pat = (pF "vcoegint" pat) # (pI "^vcoegint" busid)
 vcoegintrecv :: Pattern Int -> ControlPattern
 vcoegintrecv busid = pI "^vcoegint" busid
 
--- | 
+-- |
 velocity :: Pattern Double -> ControlPattern
 velocity = pF "velocity"
 velocityTake :: String -> [Double] -> ControlPattern
@@ -2953,7 +2949,7 @@ velocitybus busid pat = (pF "velocity" pat) # (pI "^velocity" busid)
 velocityrecv :: Pattern Int -> ControlPattern
 velocityrecv busid = pI "^velocity" busid
 
--- | 
+-- |
 voice :: Pattern Double -> ControlPattern
 voice = pF "voice"
 voiceTake :: String -> [Double] -> ControlPattern
@@ -2978,7 +2974,7 @@ vowelbus busid pat = (pS "vowel" pat) # (pI "^vowel" busid)
 vowelrecv :: Pattern Int -> ControlPattern
 vowelrecv busid = pI "^vowel" busid
 
--- | 
+-- |
 waveloss :: Pattern Double -> ControlPattern
 waveloss = pF "waveloss"
 wavelossTake :: String -> [Double] -> ControlPattern
@@ -2993,7 +2989,7 @@ wavelossbus busid pat = (pF "waveloss" pat) # (pI "^waveloss" busid)
 wavelossrecv :: Pattern Int -> ControlPattern
 wavelossrecv busid = pI "^waveloss" busid
 
--- | 
+-- |
 xsdelay :: Pattern Double -> ControlPattern
 xsdelay = pF "xsdelay"
 xsdelayTake :: String -> [Double] -> ControlPattern
